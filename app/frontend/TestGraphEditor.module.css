:root {
  --toolbar-height: 60px;
}

.graph {
  height: calc(100vh - var(--header-height));
  position: relative;
  background-color: var(--bg-2);
}

:root {
  --node-padding: 5px;
}

.node {
  border: solid 1px var(--fg-1);
  background-color: var(--bg-1);
  color: var(--fg-1);
  border-radius: 5px;
  padding: var(--node-padding);
  box-shadow: 0px 0px 2px 2px rgba(255, 255, 255, 0.3);
  display: grid;
  gap: var(--gap);
}

:global(.selected) > * > .node {
  outline: 3px solid #7f7ff2;
}

.node > label {
  display: flex;
  gap: 11px;
  align-items: center;
}

.node > label > textarea {
  flex-grow: 2;
}

.node > label > input[type="text"] {
  flex-grow: 2;
}

.nodeLabelInput {
  background-color: transparent;
  color: var(--fg-1);
  border: none;
  width: fit-content;
}

.nodeLabelFocusButton {
  background-color: transparent;
  color: var(--fg-1);
  border: none;
  width: fit-content;
  /*
  position: absolute;
  top: var(--gap);
  left: var(--gap);
  */
}


.nodeHeader {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 6px;
}

.nodeComment {
  top: calc(-1 * var(--node-padding) - 1em);
  position: absolute;
  min-width: 10px;
  border: 1px solid var(--fg-1);
  max-width: 100%;
  width: max-content;
  max-height: 1.2em;
  overflow-x: hidden;
  overflow-y: hidden;
  overflow: hidden;
  text-overflow: ellipsis;
  cursor: pointer;
}

.nodeCommentEmpty {
  top: 2px;
  border-radius: 50%;
  max-width: 8px;
  min-width: 8px;
  max-height: 8px;
  min-height: 8px;
}


.nodeComment > ::before {
  width: 0;
  height: 0;
  border-bottom: 0;
  border-top: 10px solid white;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
}

.clickable {
  cursor: pointer;
}

.deleteButton {
  --size: 25px;
  height: var(--size);
  width: var(--size);
  left: calc(100% - var(--size));
  border: solid 1px black;
  box-sizing: border-box;
  background-color: #f00;
  color: #fff;
  font-size: 16pt;
  font-weight: 500;
}

.handle {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: #a0a0a0;
  transform: translate(0, -50%) scale(1.2, 1.2);
}

.handle > label {
  width: max-content;
}

.inlineHandle {
  position: relative;
  left: 12px;
  top: initial;
  right: initial;
  bottom: initial;
  width: 12px; /* FIXME: Share CSS variable, note that handle is 10px height with a 1.2x scale */
  height: 12px;
  transform: initial;
}

.knob {
  border: initial;
  border-radius: 50%;
  min-height: 18px;
  min-width: 18px;
  max-height: 18px;
  max-width: 18px;
  position: initial;
  transform: initial;
  border: 1px solid black;
}

.arrowRight {
  width: 0;
  min-width: 0;
  max-width: 0;
  height: 0;
  min-height: 0;
  max-height: 0;
  border-left: 18px solid black;
  border-right: 0px solid transparent;
  border-top: 9px solid transparent;
  border-bottom: 9px solid transparent;
  border-radius: 0;
}

.handle > input {
  margin-left: 5px;
}

.inputHandle {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.outputHandle {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;

  display: flex;
  justify-content: space-between;
  width: 100%;
}

.connectionsGrid {
  display: grid;
  grid-template-columns: auto auto;
  gap: 6px;
}

.inputsColumn {
  display: grid;
}

.outputsColumn {
  display: grid;
}

.addNodeMenuOption {
  display: block;
}

.addNodeMenu {
  border: 1px solid black;
  padding: 8px;
  background-color: var(--bg-1);
  max-height: 300px;
  overflow-y: scroll;
}

.randomSwitchBody {
  display: flex;
  flex-direction: column;
  gap: 11px;
}

.playerRepliesBody {
  display: grid;
  grid-template-columns: repeat(5, auto);
  grid-auto-rows: auto;
  gap: 5px;
}


.randomSwitchInput {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 3px;
}
