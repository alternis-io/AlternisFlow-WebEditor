/*
 * FIXME: can remove these prefixes if can confirm/alter vite config so that
 * CSS hashes are per CSS file (I think this is already the case)
 */

.alternis__center {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
}

.alternis__split {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.alternis__hoverable {
  cursor: pointer;
}

img.alternis__hoverable {
  filter: brightness(0.9);
}

.alternis__hoverable > img {
  filter: brightness(0.9);
}

.alternis__draggable {
  cursor: grab;
}

.alternis__hoverable:hover {
  color: var(--fg-hover);
  fill: var(--fg-hover);
  stroke: var(--fg-hover);
  border-color: var(--fg-hover);
  background-color: var(--bg-1-hover);
}

.alternis__hoverable:hover img,
img.alternis__hoverable:hover
{
  filter: none;
}

.alternis__hoverable-red:hover {
  color: rgba(156, 0, 0, 0.6);
  fill: var(--fg-hover);
  stroke: var(--fg-hover);
  border-color: var(--fg-hover);
  background-color: var(--bg-1-hover);
}

.alternis__invalidInput {
  outline: 1px solid #ee2222;
  width: 6em;
}

.alternis__invalidInputMessage {
  color: #ee2222;
}

.alternis__inline-code {
  display: inline;
  font-family: monospace;
}

.alternis__tutorial-highlighted {
  box-shadow: 0 0 4px 4px #ffff00 !important;
  z-index: 1;
}

.alternis__tutorial-highlighted[data-tut-inset] {
  box-shadow: inset 0 0 4px 4px #ffff00 !important;
}

.alternis__rel-anchor {
  position: relative;
}

.alternis__propagate-size {
  height: 100%;
  width: 100%;
  position: relative;
}

.alternis__newButton {
  padding: 0.7em;
  height: 1em;
  border: 1px solid var(--fg-1);
  border-radius: 5px;
}

.alternis__floatingbox {
  padding: var(--gap);
  box-shadow: 0 0 5px 5px rgba(0,0,0,0.3);
  background-color: var(--bg-1);
  border: var(--bg-1);
}

.alternis__floatup {
  position: absolute;
  bottom: calc(100% + var(--gap));
  height: auto;
}

input.alternis__transparent {
  position: absolute;
  top: -1em;
}

.alternis__draggable {
  cursor: grab;
}

.alternis__toolBtn {
  color: var(--fg-1);
  cursor: pointer;
  background-color: var(--bg-1);
  border-radius: var(--border-radius);
  width: 30px;
  height: 30px;
}

.react-flow__attribution {
  background-color: transparent;
}

/* FIXME: move to scrollbar.global.css */

::-webkit-scrollbar {
  width: 4px;
}

::-webkit-scrollbar-track {
  background: rgba(128, 128, 128, 0.1);
}

::-webkit-scrollbar-thumb {
  background: rgba(128, 128, 128, 0.8);
  border-radius: 2px;
}

::-webkit-scrollbar:hover {
  width: 8px; /* doesn't work on chromium */
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(256, 100, 10, 0.8);
}
